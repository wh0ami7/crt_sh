name: Build and Release

# Trigger the workflow on push to main, pull requests, or tagged releases
on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*' # Triggers release job for tags like v1.0.0
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Install dependencies
        run: go mod download
        if: steps.cache-go-modules.outputs.cache-hit != 'true'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build
        run: go build -v -o crtsh-go .

      - name: Test
        run: go test -v ./...
        if: success() # Only run tests if build succeeds

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: crtsh-go
          path: myapp

  release:
    # Only run this job if the event is a tag push (e.g., v1.0.0)
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build # Depends on the build job completing successfully
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download built artifact
        uses: actions/download-artifact@v4
        with:
          name: crtsh-go
          path: ./artifacts/

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Required for authentication
        with:
          tag_name: ${{ github.ref_name }} # e.g., v1.0.0
          release_name: Release ${{ github.ref_name }}
          draft: false # Set to true if you want a draft release
          prerelease: false # Set to true for pre-releases (e.g., v1.0.0-beta)
          body: |
            Automated release for ${{ github.ref_name }}.
            - Built from main.go
            - See commit: ${{ github.sha }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }} # From create-release step
          asset_path: ./artifacts/crtsh-go
          asset_name: myapp-${{ github.ref_name }}-linux-amd64
          asset_content_type: application/octet-stream
